/* 
 * predictor_scoring
 *
 * Credit Score Predictor
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// WebServiceResult
    /// </summary>
    [DataContract]
    public partial class WebServiceResult :  IEquatable<WebServiceResult>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebServiceResult" /> class.
        /// </summary>
        /// <param name="success">Boolean flag indicating the success status of web service execution..</param>
        /// <param name="errorMessage">Error messages if any occurred during the web service execution..</param>
        /// <param name="consoleOutput">Console output from the web service execution..</param>
        /// <param name="changedFiles">The filenames of the files modified during the web service execution..</param>
        /// <param name="outputParameters">outputParameters.</param>
        public WebServiceResult(bool? success = default(bool?), string errorMessage = default(string), string consoleOutput = default(string), List<string> changedFiles = default(List<string>), OutputParameters outputParameters = default(OutputParameters))
        {
            this.Success = success;
            this.ErrorMessage = errorMessage;
            this.ConsoleOutput = consoleOutput;
            this.ChangedFiles = changedFiles;
            this.OutputParameters = outputParameters;
        }
        
        /// <summary>
        /// Boolean flag indicating the success status of web service execution.
        /// </summary>
        /// <value>Boolean flag indicating the success status of web service execution.</value>
        [DataMember(Name="success", EmitDefaultValue=false)]
        public bool? Success { get; set; }

        /// <summary>
        /// Error messages if any occurred during the web service execution.
        /// </summary>
        /// <value>Error messages if any occurred during the web service execution.</value>
        [DataMember(Name="errorMessage", EmitDefaultValue=false)]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// Console output from the web service execution.
        /// </summary>
        /// <value>Console output from the web service execution.</value>
        [DataMember(Name="consoleOutput", EmitDefaultValue=false)]
        public string ConsoleOutput { get; set; }

        /// <summary>
        /// The filenames of the files modified during the web service execution.
        /// </summary>
        /// <value>The filenames of the files modified during the web service execution.</value>
        [DataMember(Name="changedFiles", EmitDefaultValue=false)]
        public List<string> ChangedFiles { get; set; }

        /// <summary>
        /// Gets or Sets OutputParameters
        /// </summary>
        [DataMember(Name="outputParameters", EmitDefaultValue=false)]
        public OutputParameters OutputParameters { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WebServiceResult {\n");
            sb.Append("  Success: ").Append(Success).Append("\n");
            sb.Append("  ErrorMessage: ").Append(ErrorMessage).Append("\n");
            sb.Append("  ConsoleOutput: ").Append(ConsoleOutput).Append("\n");
            sb.Append("  ChangedFiles: ").Append(ChangedFiles).Append("\n");
            sb.Append("  OutputParameters: ").Append(OutputParameters).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WebServiceResult);
        }

        /// <summary>
        /// Returns true if WebServiceResult instances are equal
        /// </summary>
        /// <param name="input">Instance of WebServiceResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WebServiceResult input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Success == input.Success ||
                    (this.Success != null &&
                    this.Success.Equals(input.Success))
                ) && 
                (
                    this.ErrorMessage == input.ErrorMessage ||
                    (this.ErrorMessage != null &&
                    this.ErrorMessage.Equals(input.ErrorMessage))
                ) && 
                (
                    this.ConsoleOutput == input.ConsoleOutput ||
                    (this.ConsoleOutput != null &&
                    this.ConsoleOutput.Equals(input.ConsoleOutput))
                ) && 
                (
                    this.ChangedFiles == input.ChangedFiles ||
                    this.ChangedFiles != null &&
                    this.ChangedFiles.SequenceEqual(input.ChangedFiles)
                ) && 
                (
                    this.OutputParameters == input.OutputParameters ||
                    (this.OutputParameters != null &&
                    this.OutputParameters.Equals(input.OutputParameters))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Success != null)
                    hashCode = hashCode * 59 + this.Success.GetHashCode();
                if (this.ErrorMessage != null)
                    hashCode = hashCode * 59 + this.ErrorMessage.GetHashCode();
                if (this.ConsoleOutput != null)
                    hashCode = hashCode * 59 + this.ConsoleOutput.GetHashCode();
                if (this.ChangedFiles != null)
                    hashCode = hashCode * 59 + this.ChangedFiles.GetHashCode();
                if (this.OutputParameters != null)
                    hashCode = hashCode * 59 + this.OutputParameters.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
